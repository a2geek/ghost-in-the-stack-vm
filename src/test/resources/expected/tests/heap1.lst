MAIN:
    DIM _ONERR_TARGET AS ADDRESS = null
    DIM _ONERR_FP AS ADDRESS = null
    DIM _ONERR_SP AS ADDRESS = null
    DIM ADDR AS ADDRESS = null
    DIM SIZE AS INTEGER = null
    DIM N AS INTEGER = null
    DIM I AS INTEGER = null
    DIM TOTAL AS INTEGER = null
    DIM STARTMEM AS INTEGER = null
   0:     *(105) = 32768
   1:     CALL MEMORY.HEAPINIT()
   2:     CALL PRODOS.ENSUREPREFIXSET()
   0:     IF PRODOS.HAS80COLS() THEN
   0:         CALL MISC.PRNUM(3)
          END IF
   1:     ADDR = MEMORY.HEAPALLOC((2 + ((10 + 1) * 2)))
   2:     *((ADDR + 0)) = 10
   3:     SIZE = MEMORY.HEAPALLOC((2 + ((10 + 1) * 2)))
   4:     *((SIZE + 0)) = 10
   5:     N = 10000
   6:     ON ERROR GOTO _SHOWERROR21
   7:     CALL RUNTIME.PRINT_STRING("Running for ")
   8:     CALL RUNTIME.PRINT_INTEGER(N)
   9:     CALL RUNTIME.PRINT_STRING(" iterations. Set to max speed for this one!")
  10:     CALL RUNTIME.PRINT_NEWLINE()
  11:     STARTMEM = MEMORY.MEMFREE()
  12: _WHILE_LOOP22:
  13:     IF (N <> 0) THEN
   0:         IF (I > ubound(ADDR,1)) THEN **
   0:             ERR.NUMBER = 107
   1:             ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:             ERR.LINENUM = 21
   3:             ERR.CONTEXT = "ADDR"
   4:             ERR.SOURCE = "HEAP1.BAS"
   5:             RAISE ERROR
              END IF
   1:         IF (*(((ADDR + 2) + (I * 2))) <> 0) THEN
   0:             CALL RUNTIME.PRINT_STRING("FREEING ")
   1:             IF (I > ubound(SIZE,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 22
   3:                 ERR.CONTEXT = "SIZE"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
   2:             CALL RUNTIME.PRINT_INTEGER(*(((SIZE + 2) + (I * 2))))
   3:             CALL RUNTIME.PRINT_STRING(" BYTES AT ")
   4:             IF (I > ubound(ADDR,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 22
   3:                 ERR.CONTEXT = "ADDR"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
   5:             CALL RUNTIME.PRINT_ADDRESS(*(((ADDR + 2) + (I * 2))))
   6:             CALL RUNTIME.PRINT_NEWLINE()
   7:             IF (I > ubound(ADDR,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 23
   3:                 ERR.CONTEXT = "ADDR"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
   8:             CALL MEMORY.HEAPFREE(*(((ADDR + 2) + (I * 2))))
   9:             IF (I > ubound(SIZE,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 24
   3:                 ERR.CONTEXT = "SIZE"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
  10:             TOTAL = (TOTAL - *(((SIZE + 2) + (I * 2))))
              END IF
   2:         IF (I > ubound(SIZE,1)) THEN **
   0:             ERR.NUMBER = 107
   1:             ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:             ERR.LINENUM = 26
   3:             ERR.CONTEXT = "SIZE"
   4:             ERR.SOURCE = "HEAP1.BAS"
   5:             RAISE ERROR
              END IF
   3:         *(((SIZE + 2) + (I * 2))) = MATH.RND(400)
   4:         IF (I > ubound(ADDR,1)) THEN **
   0:             ERR.NUMBER = 107
   1:             ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:             ERR.LINENUM = 27
   3:             ERR.CONTEXT = "ADDR"
   4:             ERR.SOURCE = "HEAP1.BAS"
   5:             RAISE ERROR
              END IF
   5:         IF (I > ubound(SIZE,1)) THEN **
   0:             ERR.NUMBER = 107
   1:             ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:             ERR.LINENUM = 27
   3:             ERR.CONTEXT = "SIZE"
   4:             ERR.SOURCE = "HEAP1.BAS"
   5:             RAISE ERROR
              END IF
   6:         *(((ADDR + 2) + (I * 2))) = MEMORY.HEAPALLOC(*(((SIZE + 2) + (I * 2))))
   7:         IF (I > ubound(SIZE,1)) THEN **
   0:             ERR.NUMBER = 107
   1:             ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:             ERR.LINENUM = 28
   3:             ERR.CONTEXT = "SIZE"
   4:             ERR.SOURCE = "HEAP1.BAS"
   5:             RAISE ERROR
              END IF
   8:         TOTAL = (TOTAL + *(((SIZE + 2) + (I * 2))))
   9:         CALL RUNTIME.PRINT_STRING("ADDR=")
  10:         IF (I > ubound(ADDR,1)) THEN **
   0:             ERR.NUMBER = 107
   1:             ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:             ERR.LINENUM = 29
   3:             ERR.CONTEXT = "ADDR"
   4:             ERR.SOURCE = "HEAP1.BAS"
   5:             RAISE ERROR
              END IF
  11:         CALL RUNTIME.PRINT_ADDRESS(*(((ADDR + 2) + (I * 2))))
  12:         CALL RUNTIME.PRINT_STRING(", SIZE=")
  13:         IF (I > ubound(SIZE,1)) THEN **
   0:             ERR.NUMBER = 107
   1:             ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:             ERR.LINENUM = 29
   3:             ERR.CONTEXT = "SIZE"
   4:             ERR.SOURCE = "HEAP1.BAS"
   5:             RAISE ERROR
              END IF
  14:         CALL RUNTIME.PRINT_INTEGER(*(((SIZE + 2) + (I * 2))))
  15:         CALL RUNTIME.PRINT_STRING(", N=")
  16:         CALL RUNTIME.PRINT_INTEGER(N)
  17:         CALL RUNTIME.PRINT_STRING(", FREE=")
  18:         CALL RUNTIME.PRINT_INTEGER(MEMORY.MEMFREE())
  19:         CALL RUNTIME.PRINT_STRING(", TOTAL=")
  20:         CALL RUNTIME.PRINT_INTEGER(TOTAL)
  21:         CALL RUNTIME.PRINT_NEWLINE()
  22:         I = (I + 1)
  23:         IF (I > ubound(ADDR,1)) THEN
   0:             I = 0
              END IF
  24:         N = (N - 1)
  25:         GOTO _WHILE_LOOP22
          END IF
  14: _WHILE_EXIT22:
  15:     I = 0
  16: _FOR_LOOP23:
  17:     IF (MATH.SGN(1) >= 0) THEN
   0:         IF (I <= ubound(ADDR,1)) THEN
   0:             CALL RUNTIME.PRINT_STRING("FREEING ")
   1:             IF (I > ubound(SIZE,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 38
   3:                 ERR.CONTEXT = "SIZE"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
   2:             CALL RUNTIME.PRINT_INTEGER(*(((SIZE + 2) + (I * 2))))
   3:             CALL RUNTIME.PRINT_STRING(" BYTES AT ")
   4:             IF (I > ubound(ADDR,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 38
   3:                 ERR.CONTEXT = "ADDR"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
   5:             CALL RUNTIME.PRINT_ADDRESS(*(((ADDR + 2) + (I * 2))))
   6:             CALL RUNTIME.PRINT_NEWLINE()
   7:             IF (I > ubound(ADDR,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 39
   3:                 ERR.CONTEXT = "ADDR"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
   8:             CALL MEMORY.HEAPFREE(*(((ADDR + 2) + (I * 2))))
   9: _FOR_CONTINUE23:
  10:             I = (I + 1)
  11:             GOTO _FOR_LOOP23
              END IF
          ELSE
   0:         IF (I >= ubound(ADDR,1)) THEN
   0:             CALL RUNTIME.PRINT_STRING("FREEING ")
   1:             IF (I > ubound(SIZE,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 38
   3:                 ERR.CONTEXT = "SIZE"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
   2:             CALL RUNTIME.PRINT_INTEGER(*(((SIZE + 2) + (I * 2))))
   3:             CALL RUNTIME.PRINT_STRING(" BYTES AT ")
   4:             IF (I > ubound(ADDR,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 38
   3:                 ERR.CONTEXT = "ADDR"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
   5:             CALL RUNTIME.PRINT_ADDRESS(*(((ADDR + 2) + (I * 2))))
   6:             CALL RUNTIME.PRINT_NEWLINE()
   7:             IF (I > ubound(ADDR,1)) THEN **
   0:                 ERR.NUMBER = 107
   1:                 ERR.MESSAGE = "ARRAY INDEX OUT OF BOUNDS"
   2:                 ERR.LINENUM = 39
   3:                 ERR.CONTEXT = "ADDR"
   4:                 ERR.SOURCE = "HEAP1.BAS"
   5:                 RAISE ERROR
                  END IF
   8:             CALL MEMORY.HEAPFREE(*(((ADDR + 2) + (I * 2))))
   9: _FOR_CONTINUE23:
  10:             I = (I + 1)
  11:             GOTO _FOR_LOOP23
              END IF
          END IF
  18: _FOR_EXIT23:
  19:     IF (STARTMEM <> MEMORY.MEMFREE()) THEN
   0:         CALL RUNTIME.PRINT_STRING("** ERROR **")
   1:         CALL RUNTIME.PRINT_NEWLINE()
   2:         CALL RUNTIME.PRINT_STRING("EXPECTING ")
   3:         CALL RUNTIME.PRINT_INTEGER(STARTMEM)
   4:         CALL RUNTIME.PRINT_STRING(" BYTES FREE BUT HAVE ")
   5:         CALL RUNTIME.PRINT_INTEGER(MEMORY.MEMFREE())
   6:         CALL RUNTIME.PRINT_NEWLINE()
          ELSE
   0:         CALL RUNTIME.PRINT_STRING("** GOOD **")
   1:         CALL RUNTIME.PRINT_NEWLINE()
   2:         CALL RUNTIME.PRINT_STRING("STARTING AND ENDING MEMORY SIZES MATCH AT ")
   3:         CALL RUNTIME.PRINT_INTEGER(STARTMEM)
   4:         CALL RUNTIME.PRINT_STRING(" BYTES.")
   5:         CALL RUNTIME.PRINT_NEWLINE()
          END IF
  20:     END
  21: _SHOWERROR21:
  22:     CALL RUNTIME.PRINT_STRING("ERROR #")
  23:     CALL RUNTIME.PRINT_INTEGER(ERR.NUMBER)
  24:     CALL RUNTIME.PRINT_STRING(" - ")
  25:     CALL RUNTIME.PRINT_STRING(ERR.MESSAGE)
  26:     CALL RUNTIME.PRINT_STRING(" AT LINE ")
  27:     CALL RUNTIME.PRINT_INTEGER(ERR.LINENUM)
  28:     CALL RUNTIME.PRINT_STRING(" IN ")
  29:     CALL RUNTIME.PRINT_STRING(ERR.SOURCE)
  30:     CALL RUNTIME.PRINT_STRING(" FOR '")
  31:     CALL RUNTIME.PRINT_STRING(ERR.CONTEXT)
  32:     CALL RUNTIME.PRINT_STRING("'")
  33:     CALL RUNTIME.PRINT_NEWLINE()
  34:     CALL MEMORY.MEMREPORT()
  35:     END

