MAIN:
    DIM _ONERR_TARGET AS ADDRESS = null
    DIM _ONERR_FP AS ADDRESS = null
    DIM _ONERR_SP AS ADDRESS = null
    DIM A$ AS STRING = [""]
    DIM N AS INTEGER = null
    DIM _TEMP21 AS STRING = [""]
    DIM _TEMP22 AS STRING = [""]
    DIM _TEMP23 AS STRING = [""]
    DIM _TEMP24 AS STRING = [""]
   0:     *(105) = 32768
   1:     CALL MEMORY.HEAPINIT()
   0:     N = MEMORY.MEMFREE()
   1:     CALL RUNTIME.PRINT_STRING("Starting with ")
   2:     CALL RUNTIME.PRINT_INTEGER(N)
   3:     CALL RUNTIME.PRINT_STRING(" bytes free.")
   4:     CALL RUNTIME.PRINT_NEWLINE()
   5:     CALL MEMORY.HEAPREFDECR(addrof(A$))
   6:     A$ = "The "
   7:     CALL MEMORY.HEAPREFINCR(A$)
   8:     CALL MEMORY.HEAPREFDECR(addrof(_TEMP21))
   9:     _TEMP21 = MEMORY.HEAPALLOC(((STRINGS.LEN(A$) + STRINGS.LEN("quick brown ")) + 2))
  10:     *(_TEMP21) = CByte((STRINGS.LEN(A$) + STRINGS.LEN("quick brown ")))
  11:     CALL MEMORY.HEAPREFINCR(_TEMP21)
  12:     CALL STRINGS.STRCAT(_TEMP21, A$)
  13:     CALL STRINGS.STRCAT(_TEMP21, "quick brown ")
  14:     CALL MEMORY.HEAPREFDECR(addrof(A$))
  15:     A$ = _TEMP21
  16:     CALL MEMORY.HEAPREFINCR(A$)
  17:     CALL MEMORY.HEAPREFDECR(addrof(_TEMP22))
  18:     _TEMP22 = MEMORY.HEAPALLOC(((STRINGS.LEN(A$) + STRINGS.LEN("fox jumps ")) + 2))
  19:     *(_TEMP22) = CByte((STRINGS.LEN(A$) + STRINGS.LEN("fox jumps ")))
  20:     CALL MEMORY.HEAPREFINCR(_TEMP22)
  21:     CALL STRINGS.STRCAT(_TEMP22, A$)
  22:     CALL STRINGS.STRCAT(_TEMP22, "fox jumps ")
  23:     CALL MEMORY.HEAPREFDECR(addrof(_TEMP23))
  24:     _TEMP23 = MEMORY.HEAPALLOC(((STRINGS.LEN(_TEMP22) + STRINGS.LEN("over the")) + 2))
  25:     *(_TEMP23) = CByte((STRINGS.LEN(_TEMP22) + STRINGS.LEN("over the")))
  26:     CALL MEMORY.HEAPREFINCR(_TEMP23)
  27:     CALL STRINGS.STRCAT(_TEMP23, _TEMP22)
  28:     CALL STRINGS.STRCAT(_TEMP23, "over the")
  29:     CALL MEMORY.HEAPREFDECR(addrof(_TEMP24))
  30:     _TEMP24 = MEMORY.HEAPALLOC(((STRINGS.LEN(_TEMP23) + STRINGS.LEN(" lazy dog.")) + 2))
  31:     *(_TEMP24) = CByte((STRINGS.LEN(_TEMP23) + STRINGS.LEN(" lazy dog.")))
  32:     CALL MEMORY.HEAPREFINCR(_TEMP24)
  33:     CALL STRINGS.STRCAT(_TEMP24, _TEMP23)
  34:     CALL STRINGS.STRCAT(_TEMP24, " lazy dog.")
  35:     CALL MEMORY.HEAPREFDECR(addrof(A$))
  36:     A$ = _TEMP24
  37:     CALL MEMORY.HEAPREFINCR(A$)
  38:     CALL RUNTIME.PRINT_STRING("Result: ")
  39:     CALL RUNTIME.PRINT_NEWLINE()
  40:     CALL RUNTIME.PRINT_STRING(A$)
  41:     CALL RUNTIME.PRINT_NEWLINE()
  42:     CALL MEMORY.HEAPFREE(A$)
  43:     CALL RUNTIME.PRINT_STRING("Ending with ")
  44:     CALL RUNTIME.PRINT_INTEGER(MEMORY.MEMFREE())
  45:     CALL RUNTIME.PRINT_STRING(" bytes free.")
  46:     CALL RUNTIME.PRINT_NEWLINE()
  47:     CALL TEXT.INVERSE()
  48:     IF (N = MEMORY.MEMFREE()) THEN
   0:         CALL RUNTIME.PRINT_STRING("SUCCESS")
   1:         CALL RUNTIME.PRINT_NEWLINE()
          ELSE
   0:         CALL RUNTIME.PRINT_STRING("FAIL")
   1:         CALL RUNTIME.PRINT_NEWLINE()
          END IF
  49:     CALL TEXT.NORMAL()
  50:     END

