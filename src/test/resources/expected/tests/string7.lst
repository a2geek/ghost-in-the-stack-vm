MAIN:
    DIM _ONERR_TARGET AS ADDRESS = null
    DIM _ONERR_FP AS ADDRESS = null
    DIM _ONERR_SP AS ADDRESS = null
    DIM MEMTOTAL AS INTEGER = null
    DIM A$ AS STRING = [""]
    DIM B$ AS STRING = [""]
    DIM C$ AS STRING = [""]
   0:     *(105) = 32768
   1:     CALL MEMORY.HEAPINIT()
   0:     MEMTOTAL = MEMORY.MEMFREE()
   1:     CALL RUNTIME.PRINT_STRING("Starting with ")
   2:     CALL RUNTIME.PRINT_INTEGER(MEMTOTAL)
   3:     CALL RUNTIME.PRINT_STRING(" bytes free.")
   4:     CALL RUNTIME.PRINT_NEWLINE()
   5:     CALL MEMORY.HEAPREFDECR(addrof(A$))
   6:     A$ = MAKEBORDER("<>", 10)
   7:     CALL MEMORY.HEAPREFINCR(A$)
   8:     CALL RUNTIME.PRINT_STRING("A$=")
   9:     CALL RUNTIME.PRINT_STRING(A$)
  10:     CALL RUNTIME.PRINT_NEWLINE()
  11:     CALL RUNTIME.PRINT_STRING("LEN(A$)=")
  12:     CALL RUNTIME.PRINT_INTEGER(STRINGS.LEN(A$))
  13:     CALL RUNTIME.PRINT_NEWLINE()
  14:     CALL MEMORY.HEAPREFDECR(addrof(B$))
  15:     B$ = MAKEBORDER("=", 20)
  16:     CALL MEMORY.HEAPREFINCR(B$)
  17:     CALL RUNTIME.PRINT_STRING("B$=")
  18:     CALL RUNTIME.PRINT_STRING(B$)
  19:     CALL RUNTIME.PRINT_NEWLINE()
  20:     CALL RUNTIME.PRINT_STRING("LEN(B$)=")
  21:     CALL RUNTIME.PRINT_INTEGER(STRINGS.LEN(B$))
  22:     CALL RUNTIME.PRINT_NEWLINE()
  23:     CALL MEMORY.HEAPREFDECR(addrof(C$))
  24:     C$ = MAKEBORDER("<::>", 30)
  25:     CALL MEMORY.HEAPREFINCR(C$)
  26:     CALL RUNTIME.PRINT_STRING("C$=")
  27:     CALL RUNTIME.PRINT_STRING(C$)
  28:     CALL RUNTIME.PRINT_NEWLINE()
  29:     CALL RUNTIME.PRINT_STRING("LEN(C$)=")
  30:     CALL RUNTIME.PRINT_INTEGER(STRINGS.LEN(C$))
  31:     CALL RUNTIME.PRINT_NEWLINE()
  32:     CALL MEMORY.HEAPFREE(A$)
  33:     CALL MEMORY.HEAPFREE(B$)
  34:     CALL MEMORY.HEAPFREE(C$)
  35:     CALL RUNTIME.PRINT_STRING("Ending with ")
  36:     CALL RUNTIME.PRINT_INTEGER(MEMORY.MEMFREE())
  37:     CALL RUNTIME.PRINT_STRING(" bytes free.")
  38:     CALL RUNTIME.PRINT_NEWLINE()
  39:     CALL TEXT.INVERSE()
  40:     IF (MEMTOTAL = MEMORY.MEMFREE()) THEN
   0:         CALL RUNTIME.PRINT_STRING("SUCCESS")
   1:         CALL RUNTIME.PRINT_NEWLINE()
   2:         CALL TEXT.NORMAL()
          ELSE
   0:         CALL RUNTIME.PRINT_STRING("FAIL")
   1:         CALL RUNTIME.PRINT_NEWLINE()
   2:         CALL TEXT.NORMAL()
   3:         CALL MEMORY.MEMREPORT()
          END IF
  41:     END

FUNCTION MAKEBORDER(BYVAL N AS INTEGER, BYVAL CH$ AS STRING) AS STRING
    DIM A$ AS STRING = [""]
    DIM _TEMP22 AS STRING = [""]
   0: _REPEAT_LOOP21:
   1:     _TEMP22 = MEMORY.HEAPALLOC(((STRINGS.LEN(A$) + STRINGS.LEN(CH$)) + 2))
   2:     *(_TEMP22) = CByte((STRINGS.LEN(A$) + STRINGS.LEN(CH$)))
   3:     CALL STRINGS.STRCAT(_TEMP22, A$)
   4:     CALL STRINGS.STRCAT(_TEMP22, CH$)
   5:     CALL MEMORY.HEAPREFDECR(addrof(A$))
   6:     A$ = _TEMP22
   7:     CALL MEMORY.HEAPREFINCR(A$)
   8:     IF (STRINGS.LEN(A$) >= N) THEN
          ELSE
   0:         GOTO _REPEAT_LOOP21
          END IF
   9: _REPEAT_EXIT21:
  10:     RETURN A$
  11:     CALL MEMORY.HEAPFREE(_TEMP22)
END FUNCTION

