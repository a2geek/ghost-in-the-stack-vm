0 TEXT :CALL -936
5 DIM A$(10),I(20),D(20)
9 REM moved from 1 to 0x301
10  POKE 0x301,165: POKE 0x302,0: POKE 0x303,76: POKE 0x304,237: POKE 0x305,253
11 GOSUB 8000
12 TEXT :REM  AUTHOR S.A.BAKER WITH THANKS TO DON WILLIAMS
14 CALL -936:P=1
15 VTAB 14:TAB 28:PRINT "6502":TAB 28:PRINT "MICROCOMPUTER":VTAB 16:TAB 28:PRINT "SIMULATION"
17 FOR J=1 TO 20:D(J)=0:I(J)=0:NEXT J
20 FOR I=4 TO 23:VTAB I:TAB 8:PRINT "0":NEXT I
25 VTAB 6:TAB 18:PRINT "00";:TAB 33:PRINT "00":VTAB 11:TAB 18:PRINT "00";:TAB 33:PRINT "0";P:VTAB 16:TAB 18:PRINT "00"
30 FOR I=1 TO 20:VTAB I+3:TAB 4:IF I<10 THEN PRINT "0";:PRINT I;":":NEXT I
40 A$="RAM MEMORY":FOR I=1 TO  LEN(A$)
50 VTAB I+7:TAB 1:PRINT A$(I,I):NEXT I
60 FOR I=3 TO 11: POKE 0x300,32:VTAB 3:TAB I:CALL 0x301:VTAB 24:TAB I:CALL 0x301:NEXT I
70 FOR I=4 TO 23:VTAB I:TAB 3:CALL 0x301:TAB 11:CALL 0x301:NEXT I
80 VTAB 2:TAB 7:CALL 0x301:FOR I=7 TO 26:VTAB 1:TAB I:CALL 0x301:NEXT I
90 VTAB 2:TAB 14:PRINT "DATA BUS"
100 FOR I=2 TO 16:VTAB I:TAB 26:CALL 0x301:NEXT I
110 FOR I=29 TO 39:VTAB 5:TAB I:CALL 0x301:VTAB 7:TAB I:CALL 0x301:VTAB 10:TAB I:CALL 0x301:VTAB 12:TAB I:CALL 0x301:NEXT I
120 VTAB 4:TAB 30:PRINT "INSTR REG"
130 VTAB 9:TAB 30:PRINT "PRGM CNTR"
140 FOR I=27 TO 29:VTAB 6:TAB I:CALL 0x301:VTAB 11:TAB I:CALL 0x301:NEXT I:VTAB 6:TAB 39:CALL 0x301:VTAB 11:TAB 39:CALL 0x301
150 FOR I=15 TO 23:VTAB 5:TAB I:CALL 0x301:VTAB 7:TAB I:CALL 0x301:VTAB 10:TAB I:CALL 0x301:VTAB 12:TAB I:CALL 0x301:VTAB 15:TAB I:CALL 0x301:VTAB 17:TAB I:CALL 0x301:NEXT I
160 VTAB 4:TAB 17:PRINT "ACCUM":VTAB 9:TAB 17:PRINT "X-REG":VTAB 14:TAB 16:PRINT "STO-REG"
170 FOR I=23 TO 25:VTAB 6:TAB I:CALL 0x301:VTAB 11:TAB I:CALL 0x301:VTAB 16:TAB I:CALL 0x301:NEXT I
180 VTAB 6:TAB 15:CALL 0x301:VTAB 11:TAB 15:CALL 0x301:VTAB 16:TAB 15:CALL 0x301
190  POKE 34,18: POKE 32,11: POKE 33,27
200 VTAB 19:TAB 1:PRINT "COMMANDS:"
210 PRINT "1-LOAD MEMORY":PRINT "2-SET PRGM CNTR":PRINT "3-SINGLE STEP":PRINT "4-RUN":PRINT "(CR)-HALT";
230  POKE 32,27: POKE 33,12:CALL -936:INPUT "COMMAND <CTRL-G>",C
240 IF C>0 AND C<5 THEN 250:PRINT "INVALID<CTRL-G>":FOR I=1 TO 1000:NEXT I:GOTO 230
250 GOTO C*1000
1000 INPUT "LOCATION?",A$:K= LEN(A$):IF K=2 THEN 1005:GOTO 1055
1005 L=10*( ASC(A$(1,1))-176)+ ASC(A$(2,2))-176
1007 IF L=0 THEN 12
1010 IF L>0 AND L<21 THEN 1020:GOTO 1055
1020 INPUT "DATA ?",A$
1030 K= LEN(A$)
1040 IF K>1 AND K<5 THEN 1050:GOTO 1055
1050 IF K=4 AND (A$(1,2)="LA" OR A$(1,2)="SA" OR A$(1,2)="LX" OR A$(1,2)="SX" OR A$(1,2)="AD" OR A$(1,2)="SB") THEN 1065
1051 IF K=2 AND (A$(1,2)="NP" OR A$(1,2)="BK") THEN 1060
1052 IF K=4 AND (A$(1,2)="JP" OR A$(1,2)="BE" OR A$(1,2)="BN" OR A$(1,2)="IS" OR A$(1,2)="CP" OR A$(1,2)="IL") THEN 1065
1053 IF K=2 AND (A$(1,2)="EX" OR A$(1,2)="IX" OR A$(1,2)="DX") THEN 1060
1054 IF K=2 AND  ASC(A$(1,1))<186 THEN 1170
1055 PRINT "INVALID<CTRL-G>":FOR I=1 TO 1000:NEXT I:GOTO 230
1060 SET=1
1065 IF K#2 AND K#4 THEN 1055
1070 IF A$(1,2)="LA" THEN I(L)=1
1080 IF A$(1,2)="SA" THEN I(L)=2
1090 IF A$(1,2)="LX" THEN I(L)=3
1100 IF A$(1,2)="SX" THEN I(L)=4
1110 IF A$(1,2)="AD" THEN I(L)=5
1120 IF A$(1,2)="SB" THEN I(L)=6
1130 IF A$(1,2)="EX" THEN I(L)=7
1135 IF A$(1,2)="IX" THEN I(L)=8
1140 IF A$(1,2)="DX" THEN I(L)=9
1145 IF A$(1,2)="JP" THEN I(L)=10
1150 IF A$(1,2)="BE" THEN I(L)=11
1151 IF A$(1,2)="BN" THEN I(L)=12
1152 IF A$(1,2)="NP" THEN I(L)=13
1153 IF A$(1,2)="BK" THEN I(L)=14
1154 IF A$(1,2)="IS" THEN I(L)=15
1155 IF A$(1,2)="CP" THEN I(L)=16
1157 IF A$(1,2)="IL" THEN I(L)=17
1160 IF SET THEN 1190
1165 DD=10*( ASC(A$(3,3))-176)+ ASC(A$(4,4))-176:IF DD<1 OR DD>20 THEN 1055:GOTO 1180
1170 DD=10*( ASC(A$(1,1))-176)+ ASC(A$(2,2))-176
1180 D(L)=DD MOD 100
1190  POKE 32,0:VTAB L+3:TAB 7:PRINT A$;:IF K=2 THEN PRINT "  ": POKE 32,27:SET=0:GOTO 230
2000 PRINT "STARTING":INPUT "ADDR ",P
2010 IF P<21 AND P>0 THEN 2020:GOTO 1055
2020 VTAB 11:TAB 6:IF P<10 THEN PRINT "0";:PRINT P:GOTO 230
3000 SST=1:GOTO 4000
4000 IF I(P)#0 THEN 4010:GOTO 5000
4010 IF  PEEK (-16384)>127 THEN 5000: POKE -16368,0
4015  POKE 32,0: POKE 33,39
4020 IF I(P)=1 THEN A$="LA"
4030 IF I(P)=2 THEN A$="SA"
4040 IF I(P)=3 THEN A$="LX"
4050 IF I(P)=4 THEN A$="SX"
4060 IF I(P)=5 THEN A$="AD"
4070 IF I(P)=6 THEN A$="SB"
4080 IF I(P)=7 THEN A$="EX"
4090 IF I(P)=8 THEN A$="IX"
4100 IF I(P)=9 THEN A$="DX"
4101 IF I(P)=10 THEN A$="JP"
4102 IF I(P)=11 THEN A$="BE":IF I(P)=12 THEN A$="BN"
4103 IF I(P)=13 THEN A$="NP":IF I(P)=14 THEN A$="BK"
4104 IF I(P)=15 THEN A$="IS":IF I(P)=17 THEN A$="IL"
4105 IF I(P)=16 THEN A$="CP"
4107 VTAB 11:TAB 33:IF P<10 THEN PRINT "0";:PRINT P
4110 VTAB P+2:TAB 3: POKE 0x300,32:CALL 0x301:VTAB P+3:TAB 3: POKE 0x300,96:CALL 0x301
4115 VTAB 6:TAB 33:PRINT A$
4120 IF I(P)#1 THEN 4140:IF SST THEN GOSUB 6000:GOSUB 7000
4125 DD=D(P):D=D(DD):ACC=D
4130 VTAB 6:TAB 18:IF D<10 THEN PRINT "0";:PRINT D:IF SST THEN GOSUB 6000:GOSUB 7000:GOTO 4800
4140 IF I(P)#2 THEN 4160:IF SST THEN GOSUB 6000:GOSUB 7000
4145 DD=D(P):D(DD)=ACC
4150 VTAB DD+3:TAB 7:IF ACC<10 THEN PRINT "0";:PRINT ACC;"  ":IF SST THEN GOSUB 6000:GOSUB 7000:GOTO 4800
4160 IF I(P)#3 THEN 4180:IF SST THEN GOSUB 6000:GOSUB 7000
4165 DD=D(P):D=D(DD):LDX=D
4170 VTAB 11:TAB 18:IF D<10 THEN PRINT "0";:PRINT D:IF SST THEN GOSUB 6000:GOSUB 7000:GOTO 4800
4180 IF I(P)#4 THEN 4200:IF SST THEN GOSUB 6000:GOSUB 7000
4185 DD=D(P):D(DD)=LDX
4190 VTAB DD+3:TAB 7:IF LDX<10 THEN PRINT "0";:PRINT LDX;"  ":IF SST THEN GOSUB 6000:GOSUB 7000:GOTO 4800
4200 IF I(P)#5 THEN 4220:IF SST THEN GOSUB 6000:GOSUB 7000:DD=D(P):D=D(DD):ACC=(ACC+D) MOD 100
4210 VTAB 6:TAB 18:IF ACC<10 THEN PRINT "0";:PRINT ACC:IF SST THEN GOSUB 6000:GOSUB 7000:GOTO 4800
4220 IF I(P)#6 THEN 4240:IF SST THEN GOSUB 6000:GOSUB 7000:DD=D(P):D=D(DD):ACC=(ACC-D):IF ACC<0 THEN ACC=(ACC+100) MOD 100
4230 VTAB 6:TAB 18:IF ACC<10 THEN PRINT "0";:PRINT ACC:IF SST THEN GOSUB 6000:GOSUB 7000:GOTO 4800
4240 IF I(P)#7 THEN 4260:IF SST THEN GOSUB 6000:GOSUB 7000:STR=LDX:LDX=ACC:ACC=STR
4250 VTAB 16:TAB 18:IF STR<10 THEN PRINT "0";:PRINT STR:IF SST THEN GOSUB 6000:GOSUB 7000:VTAB 11:TAB 18:IF LDX<10 THEN PRINT "0";:PRINT LDX
4255 IF SST THEN GOSUB 6000:GOSUB 7000:VTAB 6:TAB 18:IF ACC<10 THEN PRINT "0";:PRINT ACC:IF SST THEN GOSUB 6000:GOSUB 7000:GOTO 4800
4260 IF I(P)#8 THEN 4280:IF SST THEN GOSUB 6000:GOSUB 7000:LDX=(LDX+1) MOD 100
4270 VTAB 11:TAB 18:IF LDX<10 THEN PRINT "0";:PRINT LDX:GOTO 4800
4280 IF I(P)#9 THEN 4300:IF SST THEN GOSUB 6000:GOSUB 7000:LDX=LDX-1:IF LDX<0 THEN LDX=(LDX+100) MOD 100
4290 VTAB 11:TAB 18:IF LDX<10 THEN PRINT "0";:PRINT LDX:GOTO 4800
4300 IF I(P)#10 THEN 4320:IF SST THEN GOSUB 6000:GOSUB 7000:VTAB P+3:TAB 3: POKE 0x300,32:CALL 0x301:P=D(P)-1:GOTO 4800
4320 IF I(P)#11 THEN 4340:IF SST THEN GOSUB 6000:GOSUB 7000:IF LDX#CMP THEN 4800:VTAB P+3:TAB 3: POKE 0x300,32:CALL 0x301
4330 P=D(P)-1:CMP=0:GOTO 4800
4340 IF I(P)#12 THEN 4360:IF SST THEN GOSUB 6000:GOSUB 7000:IF LDX=CMP THEN 4800:VTAB P+3:TAB 3: POKE 0x300,32:CALL 0x301
4350 P=D(P)-1:CMP=0:GOTO 4800
4360 IF I(P)#13 THEN 4380:IF SST THEN GOSUB 6000:GOSUB 7000:GOTO 4800
4380 IF I(P)#14 THEN 4400:IF SST THEN GOSUB 6000:GOSUB 7000:GOTO 5000
4400 IF I(P)#15 THEN 4420:IF SST THEN GOSUB 6000:GOSUB 7000:IF LDX+D(P)>0 AND LDX+D(P)<21 THEN 4410:LEG=1:P=P+1:GOTO 5000
4410 VTAB LDX+3+D(P):TAB 7:IF ACC<10 THEN PRINT "0";:PRINT ACC;"  ":D(LDX+D(P))=ACC
4420 IF I(P)#16 THEN 4440:IF SST THEN GOSUB 6000:GOSUB 7000:CMP=D(P)
4430 VTAB 16:TAB 18:IF D(P)<10 THEN PRINT "0";:PRINT D(P)
4440 IF I(P)#17 THEN 4800:IF SST THEN GOSUB 6000:GOSUB 7000:IF LDX+D(P)>0 AND LDX+D(P)<21 THEN 4450:LEG=1:P=P+1:GOTO 5000
4450 ACC=D(LDX+D(P)):VTAB 6:TAB 18:IF ACC<10 THEN PRINT "0";:PRINT ACC
4800 P=P+1
4900 IF NOT SST THEN 4000:SST=0
4950 VTAB 11:TAB 33:IF P<10 THEN PRINT "0";:PRINT P
4960 GOTO 230
4999 GOTO 4000
5000 FOR I=1 TO 1000:NEXT I: POKE 32,0: POKE 33,39:VTAB P+2:TAB 3: POKE 0x300,32:CALL 0x301
5005 SST=0
5007 VTAB 11:TAB 33:IF P<10 THEN PRINT "0";:PRINT P
5010  POKE 32,27: POKE 33,12:CALL -936:IF LEG THEN PRINT "ILLEGAL     ADDR"
5020 PRINT "<CTRL-G><CTRL-G><CTRL-G>":PRINT "BREAK AT    LOCATION ";P:FOR I=1 TO 2500:NEXT I:LEG=0:GOTO 230
6000 FOR I=1 TO 2000:NEXT I:RETURN 
7000 FOR I=1 TO 100:NEXT I:RETURN 
8000 CALL -936
8010 TAB 6:PRINT "6502 MICROCOMPUTER SIMULATION":FOR I=1 TO 40:PRINT "=";:NEXT I
8015 PRINT 
8020 PRINT "INSTRUCTION SET:":PRINT "----------------"
8030 PRINT "LA - LOAD ACCUMULATOR FROM MEMORY"
8040 PRINT "SA - STORE ACCUMULATOR INTO MEMORY"
8050 PRINT "LX - LOAD X-REGISTER FROM MEMORY"
8060 PRINT "SX - STORE X-REGISTER INTO MEMORY"
8070 PRINT "AD - ADD CONTENTS OF MEMORY WITH ":TAB 6:PRINT "ACCUMULATOR. RESULT INTO ACCUM"
8080 PRINT "SB - SUBTRACT CONTENTS OF MEMORY FROM":TAB 6:PRINT "ACCUMULATOR. RESULT INTO ACCUM"
8090 PRINT "EX - EXCHANGE X-REGISTER WITH ACCUM"
8100 PRINT "IX - INCREMENT X-REGISTER BY ONE"
8110 PRINT "DX - DECREMENT X-REGISTER BY ONE"
8120 PRINT "JP - UNCONDITIONAL BRANCH TO LOCATION"
8130 PRINT "BE - BRANCH IF X-REGISTER EQUALS ZERO":TAB 6:PRINT "OR IF COMPARE X-REG IS TRUE"
8140 PRINT "BN - BRANCH IF X-REGISTER NOT EQUAL TO":TAB 6:PRINT "ZERO OR COMPARE X-REG IS FALSE"
8145 VTAB 23:TAB 8:PRINT "* HIT SPACE FOR MORE *":IF  PEEK (-16384)<127 THEN 8145: POKE -16368,0:CALL -936:VTAB 1
8150 PRINT "NP - NO OPERATION"
8160 PRINT "BK - BREAK OR STOP PROGRAM EXECUTION"
8170 PRINT "IS - STORE CONTENTS OF ACCUM INTO ":TAB 6:PRINT "MEMORY LOCATION OFFSET BY X-REG"
8175 PRINT "IL - LOAD CONTENTS OF MEMORY INTO":TAB 6:PRINT "ACCUMULATOR OFFSET BY X-REG"
8180 PRINT "CP - COMPARE X-REGISTER TO STORAGE":TAB 6:PRINT "REGISTER (STO-REG) FOR USE WITH":TAB 6:PRINT "'BE AND 'BN' INSTRUCTIONS"
8190 FOR I=1 TO 40:PRINT "=";:NEXT I
8200 PRINT "HOW TO ENTER 'DATA':"
8210 PRINT "NUMERICAL DATA CAN RANGE FROM 00 TO 99":PRINT "INSTRUCTIONS (EX, IX, DX, NP, AND BK)"
8220 PRINT "ARE ENTERED LIKE: EX (CR) CARRIAGE RTN":PRINT "INSTRUCTIONS (LA,SA,LX,SX,AD,SB,JP,BE"
8230 PRINT ",BN,AND AX) ARE ENTERED LIKE: LAXX":PRINT "WHERE 'XX' REPRESENTS A NUMBER FROM 00"
8240 PRINT "TO 20":PRINT "THE INSTRUCTION 'CP' IS ENTERED LIKE:":PRINT "CPXX WHERE 'XX' REPRESENTS A NUMBER"
8250 PRINT "FROM 00 TO 99. NOTE:A '00' IN LOCATION":PRINT "'01' WILL INITIALIZE THE COMPUTER."
8800 VTAB 23:TAB 8:PRINT "* HIT SPACE TO START *":IF  PEEK (-16384)<127 THEN 8800: POKE -16368,0
8999 RETURN 
9999 END 
