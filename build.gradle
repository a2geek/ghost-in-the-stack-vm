plugins {
	id 'org.springframework.boot' version '3.3.0'
    id 'java'
    id 'antlr'
}

group 'a2geek.ghost'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/a2geek/ghost-assembler")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
        }
    }
}

dependencies {
    antlr "org.antlr:antlr4:4.13.1"
    implementation "org.antlr:antlr4-runtime:4.13.1"
    implementation 'info.picocli:picocli:4.7.6'
    implementation "net.sf.applecommander:applesingle-api:1.2.2"
    implementation "a2geek:ghost-assembler-api:0.11.1-RELEASE"
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation "io.github.java-diff-utils:java-diff-utils:4.12"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    main.java.srcDirs += "${project.buildDir}/generated-src/antlr/main"
}

generateGrammarSource {
    arguments += ["-visitor"]
    arguments += ['-package', 'a2geek.ghost.antlr.generated']
    // need to replace with layout.buildDirectory.dir(...) later
    outputDirectory = new File(buildDir.toString() + "/generated-src/antlr/main/a2geek/ghost/antlr/generated/")
}

test {
    useJUnitPlatform()
}

bootJar {
    mainClass = 'a2geek.ghost.Main'
    archiveBaseName = 'GhostBasic'
    manifest {
        attributes 'Implementation-Title': "GhostBasic 'gbas'",
                    'Implementation-Version': archiveVersion
    }
}
